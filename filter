Filter
 - 클라이언트와 서버 사이에서 request 와 reponse 객체를 필터가 먼저 받아 사전/사후 작업 등 공통적으로 필요한 부분을 처리하는것.
  - init : 웹 컨테이너가 필터를 호출할 경우 해당 메소드가 호출되어 필터 객체를 생성하며 초기화 한다.
  - doFilter : 피터가 수행될떄 구동하는 메소드로 요청 객체와 응답 객체를 사용해 일련의 작업을 수행한되,chain 을 통해 가공된 값을 목적지로 전송된다
  - destroy : 역할이 끝난 필터는 웹 컨테이너에 의해 해당 메소드를 호출하고 소멸된다.
  
  <filter>
    	<filter-name>EncodingFilter</filter-name>
    	<filter-class>common.filter.CharsetEncodingFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>EncodingFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
    
ajax
 - 서버로부터 데이터를 가져와 전체 페이지를 새로 고치지 않고 일부만 로드할수 있게 하는 기법으로 비동기식 요청을 보내는데 필요한 기술
 -ajax : Astnchronous javaSeript And Xml.
 
ajax 장단점
 - 장점
  1)비동기식 방식으로 웹 서버의 응답을 기다리지 않고 데이터를 빠르게 처리.
  2)페이지 리로딩 없이 처리
 - 단점
  1)한 페이지에 지속적으로 사용시 리소스가 쌓여 페이지가 느려짐
  2)스크립트로 되어 있어 에러 발생시 디버깅이 어려움
  
 동기식 처리모델
  - 페이지가 로드 되는 동안 브라우저는 script 문이 실행되면 그 실행이 종료 될떄 까지 기다렸다가 종료되면 나머지 페이지를 로드하는 방식
  
 비동기식 처리 모델
  - 페이지가 로드 되는 동안 브라우저는 먼저 서버데이터 요청 script문을 실핸한 후 나머지 페이지를 계속 로드하고 페이지와 상호작용을 처리하며,
  seript 요청 데이터를 기다리지 않는다. 그리고 요청데이터가 도착하면 그때 이벤트 가 발생하면서 지정된 함수가 호출되어 실해되는 방식.
  
  JSON과 XML
  -JSON : javaScript ObjectNotation의 약자로 자바스크립트 객체를 표현하기 위한 표기법으로 각 언어별로 객체 표현방법이 달라서 통일하기 위해 
  사용형식.
  
  -XML : Extensible Markup Language 의 약자로 HTML 과 매우 비슷한 문자 기반의 마크업 언어로 사람과 기계가 동시에 읽기 편한 구조로 되어있음.
  
jQuery ajax
  $ajax({
    url : “/test”, //1. 전달할 servlet url mapping
    data : {id: “idid”}, //2. 전달할 데이터
    type : “get”, //3. 전달 방식 지정
    success : function(data){ //4-1. 성공 시 시 처리할 함수
    // 서버에서 보내준 데이터는 매개변수인 data로 로 받음
},
    error : function(){ //4-2. 실패 시 시 처리할 함수
},
    complete:function(){ //5. 반드시 처리할 절차
}
  }); 
